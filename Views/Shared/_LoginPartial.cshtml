@using Microsoft.AspNetCore.Identity;
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@* @{
    var user = await UserManager.GetUserAsync(User);
    var lastName = user.Surname + " " + user.Name;
} *@
<div class="nav-log-elements">
    @if (User.Identity.IsAuthenticated)
    {
        if (User.IsInRole("Admin"))
        {
            <div class="dropdown">
                <a asp-area="" asp-controller="Users" asp-action="Index" class="dropbtn">Пользователи</a>
                <div class="dropdown-content">
                    <a asp-area="" asp-controller="Users" asp-action="Create">Добавить пользователя</a>
                </div>
            </div>
            <div class="dropdown">
                <a asp-area="" asp-controller="Roles" asp-action="Index" class="dropbtn">Роли</a>
                <div class="dropdown-content">
                    <a asp-area="" asp-controller="Roles" asp-action="Create">Добавить роль</a>
                </div>
            </div>
        }
        <a class="user-ref">@User.Identity.Name</a> @*@lastName*@
        <a asp-area="" asp-controller="Account" asp-action="Logout">Выход</a>
    }
    else
    {
        <a asp-area="" asp-controller="Account" asp-action="Register">Регистрация</a>
        <a asp-area="" asp-controller="Account" asp-action="Login">Вход</a>
    }
</div>
