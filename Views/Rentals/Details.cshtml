@model RoomRental.Models.Rental
@inject UserManager<User> userManager

@{
    ViewData["Title"] = "Details";
}

<div class="container">
    <h1>Информация о аренде</h1>
    <div class="det-container">
        <div>
            <label>@Html.DisplayNameFor(model => model.CheckInDate):</label>
            @Html.DisplayFor(model => model.CheckInDate)
        </div>
        <div>
            <label>@Html.DisplayNameFor(model => model.CheckOutDate):</label>
            @Html.DisplayFor(model => model.CheckOutDate)
        </div>
        <div>
            <label>@Html.DisplayNameFor(model => model.RentalOrganization):</label>
            @Html.DisplayFor(model => model.RentalOrganization.Name)
        </div>
        <div>
            <label>@Html.DisplayNameFor(model => model.Room):</label>
            @(Model.Room.Building.Name), № @(Model.Room.RoomNumber)
        </div>
        <div>
            <label>@Html.DisplayNameFor(model => model.Amount):</label>
            @Html.DisplayFor(model => model.Amount)
        </div>
    </div>
    <div class="det-container">
        @if (User.IsInRole("Admin") || (await userManager.GetUserAsync(User)).OrganizationId != Model.RentalOrganizationId)
        {
            <a class="btn-primary btn" asp-action="Edit" asp-route-id="@Model?.RentalId">Изменить</a>
            <span>|</span>
            <a class="btn-primary btn" asp-action="Index">Возврат к списку</a>
        }
        else
        {
            <a class="btn-primary btn" asp-action="OurRentals">Возврат к списку</a>
        }
    </div>
</div>