@model RoomRental.ViewModels.OrganizationsViewModel
@{
    ViewData["Title"] = "Organizations";
    string organizationNameFind = Model.FilterViewModel.OrganizationNameFind;
    string addressFind = Model.FilterViewModel.AddressFind;
}

<div class="index-container">
    <div class="form-container">
        <div class="tabs">
            <h3>Фильтрация</h3>
            <div><a asp-action="Create">Создать</a></div>
        </div>
        <div class="form-container_two">
            <form method="get" asp-action="Filter">
                <div class="form-div">
                    <label class="white-label">Название организации</label>
                    <input class="filter-input" name="OrganizationNameFind" value="@organizationNameFind" placeholder="Название организации" />
                </div>
                <div class="form-div">
                    <label class="white-label">Почтовый адрес</label>
                    <input class="filter-input" name="AddressFind" value="@addressFind" placeholder="Почтовый адрес" />
                </div>
                <input class="filter-input" type="hidden" name="sortOrder" value="@Model.SortViewModel.Current" />
                <input class="submitButton-index" type="submit" value="Поиск" />
            </form>
        </div>
    </div>

    <div class="table-container">
        <h1>Организации</h1>
        <div>
            <table class="table">
                <thead>
                    <tr>
                        <th class="element">
                            <a asp-action="Index"
                               asp-route-sortOrder="@(Model.SortViewModel.NameSort)"
                               asp-route-organizationNameFind="@organizationNameFind"
                               asp-route-addressFind="@addressFind">
                                @Html.DisplayNameFor(model => model.Organizations.SingleOrDefault().Name)
                            </a>
                        </th>
                        <th class="element">
                            <a asp-action="Index"
                               asp-route-sortOrder="@(Model.SortViewModel.AddressSort)"
                               asp-route-organizationNameFind="@organizationNameFind"
                               asp-route-addressFind="@addressFind">
                                @Html.DisplayNameFor(model => model.Organizations.SingleOrDefault().PostalAddress)
                            </a>
                        </th>
                        <th class="element"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Organizations)
                    {
                        <tr class="row" onclick="location.href='@Url.Action("Details", "Organizations", new { id = item.OrganizationId })'">
                            <td class="element">
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td class="element">
                                @Html.DisplayFor(modelItem => item.PostalAddress)
                            </td>
                            <td class="element">
                                <a class="btn-primary btn" asp-action="Edit" asp-route-id="@item.OrganizationId">Изменить</a> |
                                <a class="btn-danger btn" asp-action="Delete" asp-route-id="@item.OrganizationId">Удалить</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <page-link page-model="Model.PageViewModel" page-action="Index"
                   page-url-sortOrder="@(Model.SortViewModel.Current)"
                   page-url-organizationNameFind="@organizationNameFind"
                   page-url-addressFind="@addressFind"></page-link>
    </div>
</div>
